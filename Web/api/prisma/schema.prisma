generator client {
  provider = "prisma-client-js"
}

datasource db {
  provider = "mysql"
  url      = env("DATABASE_URL")
}

model Usuario {
  id         Int       @id @default(autoincrement())
  nome       String    @unique
  email      String    @unique
  telefone   String    @unique
  senha      String
   chave    String
  vidas      Int       @default(5)
  pontuacao  Int       @default(0)
  progresso  Int       @default(0)
  criadoEm   DateTime  @default(now())
  jogos      Game[]  
  mensagens  Message[] 
  comunidades Community[] @relation("CommunityParticipants") 
}

model Game {
  id          Int       @id @default(autoincrement())
  usuarioId   Int
  fase        Int
  concluido   Boolean   @default(false)
  criadoEm    DateTime  @default(now())
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
}

model LearningPath {
  id          Int       @id @default(autoincrement())
  title       String
  description String
  modules     Module[]
}

model Module {
  id                Int               @id @default(autoincrement())
  title             String
  description       String
  learningPathId    Int
  learningPath      LearningPath      @relation(fields: [learningPathId], references: [id])
  interactiveContent InteractiveContent[]
  quiz              Quiz[]
}

model InteractiveContent {
  id           Int    @id @default(autoincrement())
  step         Int
  instruction  String
  exampleCode  String
  hint         String
  userResponse String
  moduleId     Int
  module       Module @relation(fields: [moduleId], references: [id])
}

model Quiz {
  id        Int        @id @default(autoincrement())
  moduleId  Int
  module    Module     @relation(fields: [moduleId], references: [id])
  questions Question[]
}

model Question {
  id             Int       @id @default(autoincrement())
  questionText   String
  answerType     String
  quizId         Int
  quiz           Quiz      @relation(fields: [quizId], references: [id])
  options        Option[]
  expectedAnswer String
}

model Option {
  id        Int       @id @default(autoincrement())
  text      String
  questionId Int
  question  Question @relation(fields: [questionId], references: [id])
}

model Summary {
  id          Int      @id @default(autoincrement())
  title       String
  description String
  summary     String
  createdAt   DateTime @default(now())
}

model Community {
  id          String    @id @default(cuid())
  name        String
  description String
  createdBy   String
  participants Usuario[] @relation("CommunityParticipants") 
  messages    Message[]
}

model Message {
  id          Int      @id @default(autoincrement())
  text        String
  timestamp   DateTime @default(now())
  usuarioId   Int
  communityId String
  usuario     Usuario   @relation(fields: [usuarioId], references: [id])
  community   Community @relation(fields: [communityId], references: [id])
}

